services:
  # db_unit:
  #   image: mariadb:10.11.6  # Use the official MariaDB image
  #   env_file:
  #     - .env
  #   environment:
  #     MYSQL_USER: ${DB_USER}
  #     MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
  #     MYSQL_PASSWORD: ${DB_PASSWORD}
  #   volumes:
  #     - ally_data_djangotest:/var/lib/mysql
  #     - ./my.cnf:/etc/mysql/conf.d/my.cnf # Zum Testen, in Prod entfernen oder auf bestimmte Netzwerke beschränken, damit man direkt auf die Datenbnak zugreifen kann
  #   restart: unless-stopped
  #   # ports:
  #   #   - "8020:3306"
  #   healthcheck:
  #     test: ["CMD", "mysql", "-u", "${DB_USER}", "-p${DB_PASSWORD}", "-e", "SELECT 1;"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #   networks:
  #     - ally-network-djangotest

  # backend_djangotest:
  #   build:
  #     context: ../
  #     dockerfile: docker/Dockerfile_python
  #   env_file:
  #     - .env
  #   ports:
  #     - "8021:8000"
  #   depends_on:
  #     db_unit:
  #       condition: service_healthy
  #   environment:
  #     - PYTHONPATH=/app
  #     - DATABASE_URL=mysql+pymysql://${DB_USER}:${DB_PASSWORD}@db_unit:3306/${DB_DATABASE}
  #   volumes:
  #     - ../backend/app:/app  # Für Entwicklung
  #     - ../.cache:/root/.cache
  #   command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]
  #   # restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #   networks:
  #     - ally-network-djangotest

  frontend_djangotest:
    build:
      context: .
      dockerfile: Dockerfile_djangotest
    env_file:
      - .env
    ports:
      - "8022:8000"
    # depends_on:
      # backend_djangotest:
      #   condition: service_healthy
      # db_unit:
      #   condition: service_healthy
    volumes:
      - ../../frontend/ally:/app # For development
      # - ../frontend/ally_test:/app/test # For development
      - ../../.cache_ally:/root/.cache
    command: ["sh", "-c", "sleep 5 && while true; do pytest -m unit -n 4 /app/home /app/ally /app/products /app/authentication /app/focoquiz /app/recipes --html=/app/tests/unitreport.html --self-contained-html; sleep 9; done"]
    # command: ["ls", "-la"]
    # command: ["sh", "entrypoint.sh"]
    restart: on-failure
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:8000/"]
        interval: 30s
        timeout: 10s
        retries: 3
    networks:
        - ally-network-djangotest

volumes:
  ally_data_djangotest:

networks:
  ally-network-djangotest:
    driver: bridge
