services:
  db_preprod:
    image: mariadb:10.11.6  # Use the official MariaDB image
    env_file:
      - ./.env
      - ./.env.preprod
    environment:
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
    volumes:
      - consciousfit_data_preprod:/var/lib/mysql
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysql", "-u", "root", "-p${DB_ROOT_PASSWORD}", "-e", "SELECT 1;"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - cofi-network_preprod

  # backend_preprod:
  #   build:
  #     context: ../do
  #     dockerfile: docker/Dockerfile_python
  #   env_file:
  #     - .env
  #     - .env.preprod
  #   ports:
  #     - "8001:8000"
  #   depends_on:
  #     db_preprod:
  #       condition: service_healthy
  #   environment:
  #     - PYTHONPATH=/app
  #     - DATABASE_URL=mysql+pymysql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:3306/${DB_DATABASE}
  #   volumes:
  #     - ../backend/app:/app  # F端r Entwicklung
  #     - ../.cache:/root/.cache
  #   command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]
  #   # restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #   networks:
  #     - cofi-network_preprod

  frontend_preprod:
    build:
      context: ../
      dockerfile: docker/Dockerfile_django.preprod
    env_file:
      - .env
      - .env.preprod
    # ports: # Port-Weiterleitung entfernt
    #   - "8000:8000"
    depends_on:
      # backend_preprod:
      #   condition: service_healthy
      db_preprod:
        condition: service_healthy
    volumes:
      - ../frontend/cofi:/app # For development
      - ../.cache_cofi:/root/.cache
      - static_volume:/app/staticfiles # hinzugef端gt
    entrypoint: ["/app/entrypoint_prod.sh"]
    # command: ["python", "manage.py", "runserver", "0.0.0.0:8000"]
    restart: unless-stopped
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:8000/"]
        interval: 30s
        timeout: 10s
        retries: 3
    networks:
        - cofi-network_preprod

  web:
    build:
      context: .
      dockerfile: Dockerfile_nginx
    ports:
      - "80:80"
      # - "443:443" # Port 443 entfernt
    volumes:
      - static_volume:/app/staticfiles # hinzugef端gt
    depends_on:
      frontend_preprod:
        condition: service_healthy
    networks:
      - cofi-network_preprod
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost/"]
        interval: 30s
        timeout: 10s
        retries: 3

volumes:
  consciousfit_data_preprod:
  static_volume: # hinzugef端gt

networks:
  cofi-network_preprod:
    driver: bridge
